CustomTasksController API Documentation

1. Get All Tasks
   - Endpoint: GET /api/customtasks
   - Description: Retrieves a list of all tasks.
   - How to Use: Make a GET request to this endpoint. The response will be a JSON array containing all tasks.
   - Example Request:
     GET /api/customtasks

2. Get Task by ID
   - Endpoint: GET /api/customtasks/{id}
   - Description: Retrieves a task by its unique ID.
   - How to Use: Make a GET request with the task ID in the URL. If the task exists, you'll receive a JSON object for that task; otherwise, a 404 Not Found response is returned.
   - Example Request:
     GET /api/customtasks/1

3. Create a New Task
   - Endpoint: POST /api/customtasks
   - Description: Creates a new task in the system.
   - How to Use: Send a POST request with a JSON payload representing the new task. If successful, the API returns the created task's details and a 201 Created status.
   - Example Request:
     POST /api/customtasks
     Content-Type: application/json

     {
       "name": "New Task",
       "description": "Description of the task"
     }

4. Update an Existing Task
   - Endpoint: PUT /api/customtasks/{id}
   - Description: Updates an existing task identified by its ID.
   - How to Use: Send a PUT request with the updated task information in the request body. The ID in the URL must match the task's ID in the body. A 204 No Content status is returned on success.
   - Example Request:
     PUT /api/customtasks/1
     Content-Type: application/json

     {
       "id": 1,
       "name": "Updated Task",
       "description": "Updated description"
     }

5. Delete a Task
   - Endpoint: DELETE /api/customtasks/{id}
   - Description: Deletes a task identified by its ID.
   - How to Use: Send a DELETE request with the task ID in the URL. If the task is deleted successfully, a 204 No Content status is returned. If the task doesn't exist, a 404 Not Found is returned.
   - Example Request:
     DELETE /api/customtasks/1
